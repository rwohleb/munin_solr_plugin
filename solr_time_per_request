#! /usr/bin/env ruby

require 'open-uri'
require 'rexml/document'

solr_url = ENV['solr_url'] || 'http://localhost:8080'
solr_core = (ENV['solr_core'] || "solr").split(',')
query_handlers = ['standard', 'dismax', 'partitioned']

if ARGV.length > 0 && ARGV[0] == 'autoconf'
  puts "yes"
  exit(0)
end

if ARGV.length > 0 && ARGV[0] == 'config'
  puts <<CONFIG
graph_category solr
graph_title Time per request
graph_vlabel msec / request
graph_args --base 1000 -l 0 
CONFIG
  solr_core.each do |core|
    query_handlers.each do |handler|
      puts "requests_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.label requests_#{core}_#{handler}"
      puts "requests_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.type DERIVE"
      puts "requests_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.graph no"
      puts "total_time_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.label total_time_#{core}_#{handler}"
      puts "total_time_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.type DERIVE"
      puts "total_time_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.graph no"
      puts "time_per_request_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.label #{core} #{handler}"
      puts "time_per_request_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.cdef total_time_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')},requests_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')},/"
    end
  end
  exit(0)
end

solr_core.each do |core|
  solr_stats = open("#{solr_url}/#{core}/admin/stats.jsp")
  doc = REXML::Document.new(solr_stats)
  queryhandler = doc.elements['//QUERYHANDLER']
  
  query_handlers.each do |handler|
    requests = queryhandler.elements["//entry[normalize-space(name/text())='#{handler}']//stat[@name='requests']"]
    totalTime = queryhandler.elements["//entry[normalize-space(name/text())='#{handler}']//stat[@name='totalTime']"]
    
    puts "requests_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.value #{requests.text.slice(/\s*([0-9.]*)\s*/, 1)}"
    puts "total_time_#{core.gsub(/-/, '_')}_#{handler.gsub(/\./, '_')}.value #{totalTime.text.slice(/\s*([0-9.]*)\s*/, 1)}"
  end
end
